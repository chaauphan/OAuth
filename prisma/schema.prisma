// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(dbgenerated("concat('usr_', replace(cast(gen_random_uuid() as text), '-', ''))"))
  email     String @unique
  name      String?
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Store games as JSON for now
  games Json? @default("[]")
  
  // Relations
  userGames UserGame[]
}

model Game {
  id          Int      @id @default(autoincrement())
  mobyGamesId Int      @unique // MobyGames game_id
  title       String
  platform    String
  releaseDate String?
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  userGames UserGame[]
}

model UserGame {
  id        Int      @id @default(autoincrement())
  userId    String
  gameId    Int
  addedAt   DateTime @default(now())
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)
  
  @@unique([userId, gameId]) // Prevent duplicate entries
} 